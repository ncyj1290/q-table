<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.qtable.mapper.storeDetail.StoreDetailMapper">

	<!-- 매장 기본 정보 조회 -->
	<select id="getStoreBasicInfo" resultType="map">
		SELECT
		       s.store_idx
		     , s.member_idx
		     , s.store_name
		     , s.store_phone
		     , s.post_code
		     , s.full_address
		     , s.sido
		     , s.sigungu
		     , s.store_seat
		     , s.account_number
		     , s.deposit
		     , s.store_content
		     , s.price_avg
		     , s.qr_code
		     , s.is_accept
		     , s.is_24hour
		     , s.bank_code
		     , MAX(open_code.code_label) AS open_time_label
		     , MAX(close_code.code_label) AS close_time_label
		     , GROUP_CONCAT(i.image_url) AS store_image
		  FROM store s
     LEFT JOIN common_code open_code ON s.open_time = open_code.code
     LEFT JOIN common_code close_code ON s.close_time = close_code.code
	 LEFT JOIN image i ON i.target_idx = s.store_idx
		                   AND i.target_type = 'imguse_02'
		 WHERE s.store_idx = #{storeIdx}
	  GROUP BY s.store_idx
	</select>

	<!-- 매장 카테고리 조회 -->
	<select id="getStoreCategories" resultType="map">
		SELECT cat_code.code_label AS categoryName
		  FROM store_category sc
		  JOIN common_code cat_code ON sc.store_category = cat_code.code
		 WHERE sc.store_idx = #{storeIdx}
	</select>

	<!-- 매장 분위기 조회 -->
	<select id="getStoreAtmosphere" resultType="map">
		SELECT atm_code.code_label AS atmosphereName
		  FROM store_atmosphere sa
		  JOIN common_code atm_code ON sa.store_atmosphere = atm_code.code
		 WHERE sa.store_idx = #{storeIdx}
	</select>

	<!-- 매장 편의시설 조회 -->
	<select id="getStoreAmenities" resultType="map">
		SELECT amenity_code.code_label AS amenityName, amenity_code.code As amenityCode
		  FROM store_amenity sa
		  JOIN common_code amenity_code ON sa.store_amenity = amenity_code.code
		 WHERE sa.store_idx = #{storeIdx}
	</select>
	
	
	<!-- 메뉴 조회 -->
	<select id="getMenu" resultType="map">
	    SELECT 
	    	   menu_idx
	    	 , store_idx  
	    	 , menu_name  
	    	 , price  
	    	 , menu_content  
	    	 , menu_gram
	     , i.image_url AS menu_image
	      FROM menu m
	 LEFT JOIN image i ON i.target_idx = m.menu_idx
	                       AND i.target_type = 'imguse_03'
	     WHERE m.store_idx = #{storeIdx}
	</select>
	
	<!-- 리뷰 조회 -->
	<select id="getReview" resultType="map">
		SELECT
		       r.review_idx
		     , m.member_idx
		     , m.member_name
		     , m.profile_img_url
		     , r.store_idx
		     , r.create_at
		     , r.content
		     , r.score
		     , r.like_count
		     , GROUP_CONCAT(i.image_url) AS images
		  FROM review r
		  JOIN store s ON s.store_idx = r.store_idx
		  JOIN member m ON m.member_idx = r.member_idx
     LEFT JOIN image i ON i.target_idx = r.review_idx
		                  AND i.target_type = 'imguse_05'
		 WHERE r.store_idx = #{storeIdx}
		 GROUP BY r.review_idx
	</select>
	
	<select id="getReviewScoreInfo">
		SELECT
		       ROUND(AVG(score), 2) AS avgScore
		     , COUNT(*) AS reviewCount
		  FROM review
		 WHERE store_idx = #{storeIdx}
	</select>
</mapper>