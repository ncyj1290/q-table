<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.qtable.mapper.admin.AdminMapper">


	<!-- 관리자 메인화면 일주일간 신규 회원 -->
	<select id="countNewMembers">
		SELECT COUNT(*)
		  FROM member
		 WHERE member_type = 'mtype_02'
	       AND signup_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
	</select>
	
	<!-- 관리자 메인화면 일주일간 신규 매장회원 -->
	<select id="countNewStoreMembers">
		SELECT COUNT(*)
		  FROM member
		 WHERE member_type = 'mtype_03'
	       AND signup_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
	</select>
	
	<!-- 관리자 메인화면 1일 신규 입점 신청-->
	<select id="countNewStoreEntry">
		SELECT COUNT(*)
		  FROM store
	  	 WHERE store_status = 'srst_02'
	  	   AND applied_at >= DATE_SUB(CURDATE(), INTERVAL 1 DAY)
	</select>

	<!-- 매장 회원 목록 리스트 조회 -->
    <select id="findStoreMembers">
        SELECT
        	   s.store_idx,
               m.member_idx,
               s.store_name,
               m.member_id,
               m.email,
               m.signup_date,
               m.leave_at,
        	   m.member_status,
               c.code_label AS member_status_name
          FROM member m
          JOIN store s ON m.member_idx = s.member_idx
          LEFT JOIN common_code c ON m.member_status = c.code
         WHERE m.member_type = 'mtype_03'
      ORDER BY s.store_idx
    </select>
    
    <!-- 회원 / 매장 상세페이지 조회-->
    <select id="findMemberDetail">
        SELECT
        	   m.member_idx,
        	   m.member_id,
        	   m.birth,
        	   m.address,
        	   m.address_detail,
        	   m.post_code,
        	   m.member_name,
        	   m.email,
       	       m.signup_date,
       	       m.q_money,
       	       m.leave_at,
       	       m.member_type,
       	       m.business_reg_no,
        	   m.member_status,
               c.code_label AS member_status_name,
        	   s.store_name,
        	   s.store_seat,
        	   s.deposit,
        	   s.account_number,
        	   c1.code_label AS open_time,
        	   c2.code_label AS close_time
    	  FROM member m 
     LEFT JOIN store s ON m.member_idx = s.member_idx
     LEFT JOIN common_code c ON m.member_status = c.code
     LEFT JOIN common_code c1 ON s.open_time = c1.code
     LEFT JOIN common_code c2 ON s.close_time = c2.code
         WHERE m.member_idx = #{member_idx}
    </select>
    
    <!-- 매장 입점 신청 목록 리스트 조회-->
    <select id="findEntryStores">
      SELECT
             s.store_idx,
             s.member_idx,
             s.store_name,
             m.member_id,
             c.code_label AS store_status,
             s.processed_at,
             s.applied_at
        FROM store s 
        JOIN member m ON s.member_idx = m.member_idx
        JOIN common_code c ON s.store_status = c.code
       WHERE c.group_code = 'store_status'
    ORDER BY s.store_idx DESC
    </select>
    
    <!-- 회원 결제 목록 리스트 -->
    <select id="findPaymentListMembers">
	    SELECT
		   	   p.payment_idx,
	           m.member_idx,
	           m.member_id,
	           m.member_name,
	           m.member_status,
	           m.leave_at,
	           p.payment_amount,
	           p.payment_date,
	           c.code_label AS pay_status,
	           c1.code_label AS pay_way,
	           c2.code_label AS pay_type
	      FROM payment p 
	 LEFT JOIN member m ON p.member_idx = m.member_idx
	 LEFT JOIN common_code c ON p.pay_status = c.code
	 LEFT JOIN common_code c1 ON p.pay_way = c1.code
	 LEFT JOIN common_code c2 ON p.pay_type = c2.code
    </select>
    
    <!-- 매장 결제 목록 리스트 -->
    <select id="findPaymentListStores">
	    SELECT
		   	   p.payment_idx,
		   	   s.store_idx,
	           s.store_name,
	           m.member_id,
	           m.member_name,
	           m.member_status,
	           m.leave_at,
	           p.payment_amount,
	           p.payment_date,
	           c.code_label AS pay_status,
	           c1.code_label AS pay_way,
	           c2.code_label AS pay_type
	      FROM payment p 
	 LEFT JOIN member m ON p.member_idx = m.member_idx
	 LEFT JOIN reservation r ON p.reference_idx = r.reserve_idx
	 LEFT JOIN store s ON r.store_idx = s.store_idx
	 LEFT JOIN common_code c ON p.pay_status = c.code
	 LEFT JOIN common_code c1 ON p.pay_way = c1.code
	 LEFT JOIN common_code c2 ON p.pay_type = c2.code
         WHERE p.pay_type IN ('pyus_02', 'pyus_03') -- 예약금 결제, 현장 결제
    </select>
    
    <!-- 매장 정산 리스트 -->
    <select id="findJeongsanList">
		SELECT
			   j.jeongsan_idx,
		       j.jeongsan_amount,
		       c.code_label AS calculate_result,
		       c1.code_label AS bank_code,
		       j.requested_at,
		       j.processed_at,
		       s.store_name,
		       s.account_number,
		       m.member_id,
		       m.member_status,
		       m.leave_at
		  FROM jeongsan j 
	 LEFT JOIN member m ON j.member_idx = m.member_idx
	 LEFT JOIN store s ON j.member_idx = s.member_idx
	 LEFT JOIN common_code c ON j.calculate_result = c.code
	 LEFT JOIN common_code c1 ON s.bank_code = c1.code
		 WHERE member_type = "mtype_03"
    </select>
    
    <!-- 매장 정산 상세 내용 -->
    <select id="findJeongsanDetail">
	     SELECT
	            j.jeongsan_idx,
	            j.member_idx,
	            j.jeongsan_amount,
		        j.calculate_result, 
		        c.code_label AS calculate_result_name,
	            j.requested_at,
	            j.processed_at,
	            j.rejection_reason,
	            m.member_id,
	            s.store_name
	       FROM jeongsan j
	       JOIN member m ON j.member_idx = m.member_idx
	  LEFT JOIN store s ON j.member_idx = s.member_idx
	  LEFT JOIN common_code c ON j.calculate_result = c.code AND c.group_code = 'calculate_result'
	      WHERE j.jeongsan_idx = #{jeongsan_idx}
    </select>
    
    <!-- 매장 구독 리스트 -->
    <select id="findSubscribeList">
		SELECT ss.subscribe_idx,
			   ss.subscribe_start,
		       ss.subscribe_end,
		       s.store_idx,
		       s.store_name,
		       m.member_idx,
		       m.member_id,
		       DATEDIFF(subscribe_end, CURDATE()) AS remaining_days
		  FROM subscribe ss
     LEFT JOIN member m ON ss.member_idx = m.member_idx 
	 LEFT JOIN store s ON m.member_idx = s.member_idx
    </select>
    
    <!-- 공통 코드 리스트 -->
    <select id="findCommonCodeList">
	    SELECT
		   	   c.common_idx,
		       g.group_code,
	           g.group_desc,
	           c.code,
	           c.code_label,
	           c.code_desc,
	           c.using_status,
	           c.code_index
	      FROM common_code c 
	 LEFT JOIN common_code_group g ON c.group_code = g.group_code
    </select>
    
    <!-- 공통 코드 상세 조회 -->
    <select id="findCommoncodeDetail">
	    SELECT
		   	   c.common_idx,
		       g.group_code,
	           g.group_desc,
	           c.code,
	           c.code_label,
	           c.code_desc,
	           c.using_status,
	           c.code_index
	      FROM common_code c 
	 LEFT JOIN common_code_group g ON c.group_code = g.group_code
	     WHERE c.common_idx = #{common_idx}
    </select>
    
    <!-- 공통 코드 삭제 -->
    <delete id="deleteCommonCodeById">
    	DELETE
    	  FROM common_code
    	 WHERE common_idx = #{common_idx} 
    </delete>
    
    <!-- 공통 코드 업데이트 -->
    <update id="updateCommonCode">
		UPDATE common_code
	       SET code = #{CommonCodeVO.code},
	           code_label = #{CommonCodeVO.code_label},
	           code_desc = #{CommonCodeVO.code_desc},
	           using_status = #{CommonCodeVO.using_status},
	           code_index = #{CommonCodeVO.code_index},
	           updater_idx = #{updater_idx},
        	   update_date = #{update_date}
	     WHERE common_idx = #{common_idx}
    </update>
    
    <!-- 공통 코드 그룹 select box값-->
    <select id="findAllGroups">
        SELECT
            group_code,
            group_desc
        FROM
            common_code_group
        ORDER BY
            group_code
    </select>
    
    
    <!-- 공통 코드 그룹 insert-->
    <insert id="saveCommonCodeGroup">
        INSERT INTO common_code_group 
        			(
            		group_code,
            		group_desc,
            		creater_idx) 
             VALUES (
					 #{group_code},
            		 #{group_desc},
            		 #{creater_idx})
    </insert>
    
    <!-- 공통 코드 insert-->
    <insert id="saveCommonCode">
		INSERT INTO common_code (
		            group_code,
		            code,
		            code_label,
		            code_desc, 
		            parent_code,
		            code_index, 
		            creater_idx
		            ) VALUES
		    <foreach collection="list" item="item" separator=",">
		           (
		            #{item.group_code},
		            #{item.code},
		            #{item.code_label},
		            #{item.code_desc},
		            #{item.parent_code},
		            #{item.code_index}, 
		            #{item.creater_idx}
		           )
		    </foreach>
    </insert>
    
    <!-- 사용자 로그 리스트 조회 -->
    <select id="findUserLogList">
	    SELECT
		       l.log_idx,
	           l.member_idx,
	           l.login_time,
	           l.ip_address,
	           m.member_id
	      FROM user_log l
	 LEFT JOIN member m ON l.member_idx = m.member_idx
	  ORDER BY l.log_idx desc
    </select>

	<select id="getStoreIdxByMemberIdx" resultType="Integer">
	    SELECT store_idx
	      FROM store
	     WHERE member_idx = #{member_idx}
	</select>
    
    
</mapper>
